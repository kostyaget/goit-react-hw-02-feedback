{"ast":null,"code":"import React, { Component } from 'react';\nimport Statistics from './statistics';\nimport FeedbackOpt from './feedbackOpt';\nimport Notification from './notification';\nimport Section from './section';\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.onIncrement = e => {\n      const {\n        id\n      } = e.target;\n      this.setState(prevState => {\n        return {\n          [id]: prevState[id] + 1\n        };\n      });\n    };\n\n    this.countTotalFeedback = () => {\n      return this.state.good + TouchList.state.neitral + this.state.bad;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      return (this, state.good / (this.state.good + this.state.neutral + this.state.bad)) * 100;\n    };\n  }\n\n}\n\nexport default App; // export const App = () => {\n//   return (\n//     <div\n//       style={{\n//         height: '100vh',\n//         display: 'flex',\n//         justifyContent: 'center',\n//         alignItems: 'center',\n//         fontSize: 40,\n//         color: '#010101'\n//       }}\n//     >\n//     </div>\n//   );\n// };","map":{"version":3,"sources":["D:/GidHub Progects/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["React","Component","Statistics","FeedbackOpt","Notification","Section","App","state","good","neutral","bad","onIncrement","e","id","target","setState","prevState","countTotalFeedback","TouchList","neitral","countPositiveFeedbackPercentage"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADkB;;AAAA,SAO1BC,WAP0B,GAOZC,CAAC,IAAI;AACjB,YAAM;AAAEC,QAAAA;AAAF,UAASD,CAAC,CAACE,MAAjB;AACA,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACzB,eAAO;AAAE,WAACH,EAAD,GAAMG,SAAS,CAACH,EAAD,CAAT,GAAgB;AAAxB,SAAP;AACD,OAFD;AAGD,KAZyB;;AAAA,SAc1BI,kBAd0B,GAcL,MAAM;AACzB,aAAO,KAAKV,KAAL,CAAWC,IAAX,GAAkBU,SAAS,CAACX,KAAV,CAAgBY,OAAlC,GAA4C,KAAKZ,KAAL,CAAWG,GAA9D;AACD,KAhByB;;AAAA,SAkB1BU,+BAlB0B,GAkBQ,MAAM;AACtC,aACE,CAAC,MAAMb,KAAK,CAACC,IAAN,IACJ,KAAKD,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAD9C,CAAP,IAEA,GAHF;AAKD,KAxByB;AAAA;;AAAA;;AA2B5B,eAAeJ,GAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\r\nimport Statistics from './statistics';\r\nimport FeedbackOpt from './feedbackOpt';\r\nimport Notification from './notification';\r\nimport Section from './section';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onIncrement = e => {\r\n    const { id } = e.target;\r\n    this.setState(prevState => {\r\n      return { [id]: prevState[id] + 1 }\r\n    })\r\n  }\r\n\r\n  countTotalFeedback = () => {\r\n    return this.state.good + TouchList.state.neitral + this.state.bad;\r\n  }\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    return (\r\n      (this, state.good /\r\n        (this.state.good + this.state.neutral + this.state.bad)) *\r\n      100\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n// export const App = () => {\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         height: '100vh',\r\n//         display: 'flex',\r\n//         justifyContent: 'center',\r\n//         alignItems: 'center',\r\n//         fontSize: 40,\r\n//         color: '#010101'\r\n//       }}\r\n//     >\r\n      \r\n//     </div>\r\n//   );\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}
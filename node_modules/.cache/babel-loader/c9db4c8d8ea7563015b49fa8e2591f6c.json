{"ast":null,"code":"var _jsxFileName = \"D:\\\\GidHub Progects\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport Statistics from './statistics';\nimport FeedbackOpt from './feedbackOpt';\nimport Notification from './notification';\nimport Section from './section';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.onIncrement = e => {\n      const {\n        id\n      } = e.target;\n      this.setState(prevState => {\n        return {\n          [id]: prevState[id] + 1\n        };\n      });\n    };\n\n    this.countTotalFeedback = () => {\n      return this.state.good + this.state.neutral + this.state.bad;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      return this.state.good / (this.state.good + this.state.neutral + this.state.bad) * 100;\n    };\n  }\n\n  render() {\n    const total = this.countTotalFeedback();\n    const positivePercentage = Math.floor(this.countPositiveFeedbackPercentage());\n    const eventHandler = this.onIncrement;\n    return /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Please leave feedback\",\n      children: [/*#__PURE__*/_jsxDEV(FeedbackOpt, {\n        options: ['good', 'neutral', 'bad'],\n        onLeaveFeedback: eventHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), !total ? /*#__PURE__*/_jsxDEV(Notification, {\n        title: \"There is on Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Statistics, {\n        good: this.state.good,\n        neutral: this.state.neutral,\n        bad: this.state.bad,\n        total: total,\n        positivePercentage: positivePercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/GidHub Progects/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["React","Component","Statistics","FeedbackOpt","Notification","Section","App","state","good","neutral","bad","onIncrement","e","id","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","render","total","positivePercentage","Math","floor","eventHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADkB;;AAAA,SAO1BC,WAP0B,GAOZC,CAAC,IAAI;AACjB,YAAM;AAAEC,QAAAA;AAAF,UAASD,CAAC,CAACE,MAAjB;AACA,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACzB,eAAO;AAAE,WAACH,EAAD,GAAMG,SAAS,CAACH,EAAD,CAAT,GAAgB;AAAxB,SAAP;AACD,OAFD;AAGD,KAZyB;;AAAA,SAc1BI,kBAd0B,GAcL,MAAM;AACzB,aAAO,KAAKV,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAAzD;AACD,KAhByB;;AAAA,SAkB1BQ,+BAlB0B,GAkBQ,MAAM;AACtC,aACG,KAAKX,KAAL,CAAWC,IAAX,IACE,KAAKD,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GADpD,CAAD,GAEA,GAHF;AAKD,KAxByB;AAAA;;AA0B1BS,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKH,kBAAL,EAAd;AACA,UAAMI,kBAAkB,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKL,+BAAL,EAAX,CAA3B;AACA,UAAMM,YAAY,GAAG,KAAKb,WAA1B;AAEA,wBACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,uBAAf;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAE,CAAC,MAAD,EAAS,SAAT,EAAoB,KAApB,CAAtB;AAAkD,QAAA,eAAe,EAAEa;AAAnE;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,CAACJ,KAAD,gBACC,QAAC,YAAD;AAAc,QAAA,KAAK,EAAG;AAAtB;AAAA;AAAA;AAAA;AAAA,cADD,gBAGG,QAAC,UAAD;AACE,QAAA,IAAI,EAAE,KAAKb,KAAL,CAAWC,IADnB;AAEE,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAFtB;AAGE,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,GAHlB;AAIE,QAAA,KAAK,EAAEU,KAJT;AAKE,QAAA,kBAAkB,EAAEC;AALtB;AAAA;AAAA;AAAA;AAAA,cALN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AA/CyB;;AAkD5B,eAAef,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Statistics from './statistics';\r\nimport FeedbackOpt from './feedbackOpt';\r\nimport Notification from './notification';\r\nimport Section from './section';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onIncrement = e => {\r\n    const { id } = e.target;\r\n    this.setState(prevState => {\r\n      return { [id]: prevState[id] + 1 }\r\n    })\r\n  }\r\n\r\n  countTotalFeedback = () => {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  }\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    return (\r\n      (this.state.good /\r\n        (this.state.good + this.state.neutral + this.state.bad)) *\r\n      100\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = Math.floor(this.countPositiveFeedbackPercentage());\r\n    const eventHandler = this.onIncrement;\r\n\r\n    return (\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOpt options={['good', 'neutral', 'bad']} onLeaveFeedback={eventHandler} />\r\n        {!total ? (\r\n          <Notification title = \"There is on Feedback\" />\r\n                  ) : (\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n          /> \r\n        ) }\r\n      </Section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n\r\n"]},"metadata":{},"sourceType":"module"}